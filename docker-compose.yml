services:
  influxdb:
    image: influxdb:latest
    container_name: flashes-influxdb
    ports:
      - "8086:8086"
    volumes:
      - ./data/influxdb:/var/lib/influxdb2
      - ./config/influxdb:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=flashes
      - DOCKER_INFLUXDB_INIT_BUCKET=flashes_data
      - DOCKER_INFLUXDB_INIT_RETENTION=0
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN} 
      - INFLUXDB_STORAGE_TSI_DISABLE_COMPACTION=true
    networks:
      - flashes-network

  mongodb:
    image: mongo:latest
    container_name: flashes-mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_DB_PATH=/data/db
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongodb:/data/db
    networks:
      - flashes-network

  grafana:
    image: grafana/grafana:latest
    container_name: flashes-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    depends_on:
      - influxdb
        
    volumes:
      - ./data/grafana:/var/lib/grafana
    networks:
      - flashes-network

  backend:
    build: ./backend
    container_name: flashes-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - influxdb
      - mongodb
    volumes:
      - ./backend:/app
    networks:
      - flashes-network

networks:
  flashes-network:
    driver: bridge